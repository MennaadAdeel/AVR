
Assignment2_Q2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000005d0  00000664  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  0080006a  0080006a  0000066e  2**0
                  ALLOC
  3 .stab         00000894  00000000  00000000  00000670  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000476  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 36       	cpi	r26, 0x6D	; 109
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 91 02 	call	0x522	; 0x522 <main>
  8a:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_u8SetPinValue>:
}
*/


u8 DIO_u8SetPinValue(u8 u8port, u8 u8pin, u8 u8value)
{
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	27 97       	sbiw	r28, 0x07	; 7
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
  a6:	8a 83       	std	Y+2, r24	; 0x02
  a8:	6b 83       	std	Y+3, r22	; 0x03
  aa:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = 0;
  ac:	19 82       	std	Y+1, r1	; 0x01
    switch (u8port)
  ae:	8a 81       	ldd	r24, Y+2	; 0x02
  b0:	28 2f       	mov	r18, r24
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	3f 83       	std	Y+7, r19	; 0x07
  b6:	2e 83       	std	Y+6, r18	; 0x06
  b8:	8e 81       	ldd	r24, Y+6	; 0x06
  ba:	9f 81       	ldd	r25, Y+7	; 0x07
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	91 05       	cpc	r25, r1
  c0:	09 f4       	brne	.+2      	; 0xc4 <DIO_u8SetPinValue+0x32>
  c2:	4b c0       	rjmp	.+150    	; 0x15a <DIO_u8SetPinValue+0xc8>
  c4:	2e 81       	ldd	r18, Y+6	; 0x06
  c6:	3f 81       	ldd	r19, Y+7	; 0x07
  c8:	22 30       	cpi	r18, 0x02	; 2
  ca:	31 05       	cpc	r19, r1
  cc:	2c f4       	brge	.+10     	; 0xd8 <DIO_u8SetPinValue+0x46>
  ce:	8e 81       	ldd	r24, Y+6	; 0x06
  d0:	9f 81       	ldd	r25, Y+7	; 0x07
  d2:	00 97       	sbiw	r24, 0x00	; 0
  d4:	71 f0       	breq	.+28     	; 0xf2 <DIO_u8SetPinValue+0x60>
  d6:	dd c0       	rjmp	.+442    	; 0x292 <DIO_u8SetPinValue+0x200>
  d8:	2e 81       	ldd	r18, Y+6	; 0x06
  da:	3f 81       	ldd	r19, Y+7	; 0x07
  dc:	22 30       	cpi	r18, 0x02	; 2
  de:	31 05       	cpc	r19, r1
  e0:	09 f4       	brne	.+2      	; 0xe4 <DIO_u8SetPinValue+0x52>
  e2:	6f c0       	rjmp	.+222    	; 0x1c2 <DIO_u8SetPinValue+0x130>
  e4:	8e 81       	ldd	r24, Y+6	; 0x06
  e6:	9f 81       	ldd	r25, Y+7	; 0x07
  e8:	83 30       	cpi	r24, 0x03	; 3
  ea:	91 05       	cpc	r25, r1
  ec:	09 f4       	brne	.+2      	; 0xf0 <DIO_u8SetPinValue+0x5e>
  ee:	9d c0       	rjmp	.+314    	; 0x22a <DIO_u8SetPinValue+0x198>
  f0:	d0 c0       	rjmp	.+416    	; 0x292 <DIO_u8SetPinValue+0x200>
    {
    case DIO_u8PORTA:
        if (u8value == 1)
  f2:	8c 81       	ldd	r24, Y+4	; 0x04
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	a1 f4       	brne	.+40     	; 0x120 <DIO_u8SetPinValue+0x8e>
            SET_BIT(PORTA, u8pin);
  f8:	ab e3       	ldi	r26, 0x3B	; 59
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	eb e3       	ldi	r30, 0x3B	; 59
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	48 2f       	mov	r20, r24
 104:	8b 81       	ldd	r24, Y+3	; 0x03
 106:	28 2f       	mov	r18, r24
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 2e       	mov	r0, r18
 110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_u8SetPinValue+0x84>
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	0a 94       	dec	r0
 118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_u8SetPinValue+0x80>
 11a:	84 2b       	or	r24, r20
 11c:	8c 93       	st	X, r24
 11e:	be c0       	rjmp	.+380    	; 0x29c <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 120:	8c 81       	ldd	r24, Y+4	; 0x04
 122:	88 23       	and	r24, r24
 124:	a9 f4       	brne	.+42     	; 0x150 <DIO_u8SetPinValue+0xbe>
            CLR_BIT(PORTA, u8pin);
 126:	ab e3       	ldi	r26, 0x3B	; 59
 128:	b0 e0       	ldi	r27, 0x00	; 0
 12a:	eb e3       	ldi	r30, 0x3B	; 59
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	48 2f       	mov	r20, r24
 132:	8b 81       	ldd	r24, Y+3	; 0x03
 134:	28 2f       	mov	r18, r24
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 2e       	mov	r0, r18
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_u8SetPinValue+0xb2>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	0a 94       	dec	r0
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_u8SetPinValue+0xae>
 148:	80 95       	com	r24
 14a:	84 23       	and	r24, r20
 14c:	8c 93       	st	X, r24
 14e:	a6 c0       	rjmp	.+332    	; 0x29c <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	89 83       	std	Y+1, r24	; 0x01
 154:	99 81       	ldd	r25, Y+1	; 0x01
 156:	9d 83       	std	Y+5, r25	; 0x05
 158:	a3 c0       	rjmp	.+326    	; 0x2a0 <DIO_u8SetPinValue+0x20e>
        break;
    case DIO_u8PORTB:
        if (u8value == 1)
 15a:	8c 81       	ldd	r24, Y+4	; 0x04
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	a1 f4       	brne	.+40     	; 0x188 <DIO_u8SetPinValue+0xf6>
            SET_BIT(PORTB, u8pin);
 160:	a8 e3       	ldi	r26, 0x38	; 56
 162:	b0 e0       	ldi	r27, 0x00	; 0
 164:	e8 e3       	ldi	r30, 0x38	; 56
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	48 2f       	mov	r20, r24
 16c:	8b 81       	ldd	r24, Y+3	; 0x03
 16e:	28 2f       	mov	r18, r24
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	02 2e       	mov	r0, r18
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_u8SetPinValue+0xec>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	0a 94       	dec	r0
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_u8SetPinValue+0xe8>
 182:	84 2b       	or	r24, r20
 184:	8c 93       	st	X, r24
 186:	8a c0       	rjmp	.+276    	; 0x29c <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 188:	8c 81       	ldd	r24, Y+4	; 0x04
 18a:	88 23       	and	r24, r24
 18c:	a9 f4       	brne	.+42     	; 0x1b8 <DIO_u8SetPinValue+0x126>
            CLR_BIT(PORTB, u8pin);
 18e:	a8 e3       	ldi	r26, 0x38	; 56
 190:	b0 e0       	ldi	r27, 0x00	; 0
 192:	e8 e3       	ldi	r30, 0x38	; 56
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	80 81       	ld	r24, Z
 198:	48 2f       	mov	r20, r24
 19a:	8b 81       	ldd	r24, Y+3	; 0x03
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 2e       	mov	r0, r18
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_u8SetPinValue+0x11a>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	0a 94       	dec	r0
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_u8SetPinValue+0x116>
 1b0:	80 95       	com	r24
 1b2:	84 23       	and	r24, r20
 1b4:	8c 93       	st	X, r24
 1b6:	72 c0       	rjmp	.+228    	; 0x29c <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	89 83       	std	Y+1, r24	; 0x01
 1bc:	29 81       	ldd	r18, Y+1	; 0x01
 1be:	2d 83       	std	Y+5, r18	; 0x05
 1c0:	6f c0       	rjmp	.+222    	; 0x2a0 <DIO_u8SetPinValue+0x20e>
        break;

    case DIO_u8PORTC:
        if (u8value == 1)
 1c2:	8c 81       	ldd	r24, Y+4	; 0x04
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	a1 f4       	brne	.+40     	; 0x1f0 <DIO_u8SetPinValue+0x15e>
            SET_BIT(PORTC, u8pin);
 1c8:	a5 e3       	ldi	r26, 0x35	; 53
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	e5 e3       	ldi	r30, 0x35	; 53
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	48 2f       	mov	r20, r24
 1d4:	8b 81       	ldd	r24, Y+3	; 0x03
 1d6:	28 2f       	mov	r18, r24
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 2e       	mov	r0, r18
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_u8SetPinValue+0x154>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	0a 94       	dec	r0
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_u8SetPinValue+0x150>
 1ea:	84 2b       	or	r24, r20
 1ec:	8c 93       	st	X, r24
 1ee:	56 c0       	rjmp	.+172    	; 0x29c <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 1f0:	8c 81       	ldd	r24, Y+4	; 0x04
 1f2:	88 23       	and	r24, r24
 1f4:	a9 f4       	brne	.+42     	; 0x220 <DIO_u8SetPinValue+0x18e>
            CLR_BIT(PORTC, u8pin);
 1f6:	a5 e3       	ldi	r26, 0x35	; 53
 1f8:	b0 e0       	ldi	r27, 0x00	; 0
 1fa:	e5 e3       	ldi	r30, 0x35	; 53
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	48 2f       	mov	r20, r24
 202:	8b 81       	ldd	r24, Y+3	; 0x03
 204:	28 2f       	mov	r18, r24
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 2e       	mov	r0, r18
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_u8SetPinValue+0x182>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	0a 94       	dec	r0
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_u8SetPinValue+0x17e>
 218:	80 95       	com	r24
 21a:	84 23       	and	r24, r20
 21c:	8c 93       	st	X, r24
 21e:	3e c0       	rjmp	.+124    	; 0x29c <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	89 83       	std	Y+1, r24	; 0x01
 224:	39 81       	ldd	r19, Y+1	; 0x01
 226:	3d 83       	std	Y+5, r19	; 0x05
 228:	3b c0       	rjmp	.+118    	; 0x2a0 <DIO_u8SetPinValue+0x20e>
        break;

    case DIO_u8PORTD:
        if (u8value == 1)
 22a:	8c 81       	ldd	r24, Y+4	; 0x04
 22c:	81 30       	cpi	r24, 0x01	; 1
 22e:	a1 f4       	brne	.+40     	; 0x258 <DIO_u8SetPinValue+0x1c6>
            SET_BIT(PORTD, u8pin);
 230:	a2 e3       	ldi	r26, 0x32	; 50
 232:	b0 e0       	ldi	r27, 0x00	; 0
 234:	e2 e3       	ldi	r30, 0x32	; 50
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	80 81       	ld	r24, Z
 23a:	48 2f       	mov	r20, r24
 23c:	8b 81       	ldd	r24, Y+3	; 0x03
 23e:	28 2f       	mov	r18, r24
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 2e       	mov	r0, r18
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_u8SetPinValue+0x1bc>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	0a 94       	dec	r0
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_u8SetPinValue+0x1b8>
 252:	84 2b       	or	r24, r20
 254:	8c 93       	st	X, r24
 256:	22 c0       	rjmp	.+68     	; 0x29c <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 258:	8c 81       	ldd	r24, Y+4	; 0x04
 25a:	88 23       	and	r24, r24
 25c:	a9 f4       	brne	.+42     	; 0x288 <DIO_u8SetPinValue+0x1f6>
            CLR_BIT(PORTD, u8pin);
 25e:	a2 e3       	ldi	r26, 0x32	; 50
 260:	b0 e0       	ldi	r27, 0x00	; 0
 262:	e2 e3       	ldi	r30, 0x32	; 50
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	48 2f       	mov	r20, r24
 26a:	8b 81       	ldd	r24, Y+3	; 0x03
 26c:	28 2f       	mov	r18, r24
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 2e       	mov	r0, r18
 276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_u8SetPinValue+0x1ea>
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	0a 94       	dec	r0
 27e:	e2 f7       	brpl	.-8      	; 0x278 <DIO_u8SetPinValue+0x1e6>
 280:	80 95       	com	r24
 282:	84 23       	and	r24, r20
 284:	8c 93       	st	X, r24
 286:	0a c0       	rjmp	.+20     	; 0x29c <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	89 83       	std	Y+1, r24	; 0x01
 28c:	89 81       	ldd	r24, Y+1	; 0x01
 28e:	8d 83       	std	Y+5, r24	; 0x05
 290:	07 c0       	rjmp	.+14     	; 0x2a0 <DIO_u8SetPinValue+0x20e>
        break;

    default:
        return Local_u8ErrorState =1;
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	89 83       	std	Y+1, r24	; 0x01
 296:	99 81       	ldd	r25, Y+1	; 0x01
 298:	9d 83       	std	Y+5, r25	; 0x05
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <DIO_u8SetPinValue+0x20e>
        break;
    }
    return Local_u8ErrorState;
 29c:	29 81       	ldd	r18, Y+1	; 0x01
 29e:	2d 83       	std	Y+5, r18	; 0x05
 2a0:	8d 81       	ldd	r24, Y+5	; 0x05
}
 2a2:	27 96       	adiw	r28, 0x07	; 7
 2a4:	0f b6       	in	r0, 0x3f	; 63
 2a6:	f8 94       	cli
 2a8:	de bf       	out	0x3e, r29	; 62
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	cd bf       	out	0x3d, r28	; 61
 2ae:	cf 91       	pop	r28
 2b0:	df 91       	pop	r29
 2b2:	08 95       	ret

000002b4 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 u8port, u8 u8value)
{
 2b4:	df 93       	push	r29
 2b6:	cf 93       	push	r28
 2b8:	00 d0       	rcall	.+0      	; 0x2ba <DIO_u8SetPortValue+0x6>
 2ba:	00 d0       	rcall	.+0      	; 0x2bc <DIO_u8SetPortValue+0x8>
 2bc:	00 d0       	rcall	.+0      	; 0x2be <DIO_u8SetPortValue+0xa>
 2be:	cd b7       	in	r28, 0x3d	; 61
 2c0:	de b7       	in	r29, 0x3e	; 62
 2c2:	8a 83       	std	Y+2, r24	; 0x02
 2c4:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
 2c6:	19 82       	std	Y+1, r1	; 0x01
    switch (u8port)
 2c8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ca:	28 2f       	mov	r18, r24
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	3e 83       	std	Y+6, r19	; 0x06
 2d0:	2d 83       	std	Y+5, r18	; 0x05
 2d2:	8d 81       	ldd	r24, Y+5	; 0x05
 2d4:	9e 81       	ldd	r25, Y+6	; 0x06
 2d6:	81 30       	cpi	r24, 0x01	; 1
 2d8:	91 05       	cpc	r25, r1
 2da:	49 f1       	breq	.+82     	; 0x32e <DIO_u8SetPortValue+0x7a>
 2dc:	2d 81       	ldd	r18, Y+5	; 0x05
 2de:	3e 81       	ldd	r19, Y+6	; 0x06
 2e0:	22 30       	cpi	r18, 0x02	; 2
 2e2:	31 05       	cpc	r19, r1
 2e4:	2c f4       	brge	.+10     	; 0x2f0 <DIO_u8SetPortValue+0x3c>
 2e6:	8d 81       	ldd	r24, Y+5	; 0x05
 2e8:	9e 81       	ldd	r25, Y+6	; 0x06
 2ea:	00 97       	sbiw	r24, 0x00	; 0
 2ec:	61 f0       	breq	.+24     	; 0x306 <DIO_u8SetPortValue+0x52>
 2ee:	5b c0       	rjmp	.+182    	; 0x3a6 <DIO_u8SetPortValue+0xf2>
 2f0:	2d 81       	ldd	r18, Y+5	; 0x05
 2f2:	3e 81       	ldd	r19, Y+6	; 0x06
 2f4:	22 30       	cpi	r18, 0x02	; 2
 2f6:	31 05       	cpc	r19, r1
 2f8:	71 f1       	breq	.+92     	; 0x356 <DIO_u8SetPortValue+0xa2>
 2fa:	8d 81       	ldd	r24, Y+5	; 0x05
 2fc:	9e 81       	ldd	r25, Y+6	; 0x06
 2fe:	83 30       	cpi	r24, 0x03	; 3
 300:	91 05       	cpc	r25, r1
 302:	e9 f1       	breq	.+122    	; 0x37e <DIO_u8SetPortValue+0xca>
 304:	50 c0       	rjmp	.+160    	; 0x3a6 <DIO_u8SetPortValue+0xf2>
    {
    case DIO_u8PORTA:
        if (u8value == 1)
 306:	8b 81       	ldd	r24, Y+3	; 0x03
 308:	81 30       	cpi	r24, 0x01	; 1
 30a:	29 f4       	brne	.+10     	; 0x316 <DIO_u8SetPortValue+0x62>
            PORTA = 1;
 30c:	eb e3       	ldi	r30, 0x3B	; 59
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	80 83       	st	Z, r24
 314:	4d c0       	rjmp	.+154    	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 316:	8b 81       	ldd	r24, Y+3	; 0x03
 318:	88 23       	and	r24, r24
 31a:	21 f4       	brne	.+8      	; 0x324 <DIO_u8SetPortValue+0x70>
            PORTA = 0;
 31c:	eb e3       	ldi	r30, 0x3B	; 59
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	10 82       	st	Z, r1
 322:	46 c0       	rjmp	.+140    	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	89 83       	std	Y+1, r24	; 0x01
 328:	99 81       	ldd	r25, Y+1	; 0x01
 32a:	9c 83       	std	Y+4, r25	; 0x04
 32c:	43 c0       	rjmp	.+134    	; 0x3b4 <DIO_u8SetPortValue+0x100>
        break;

    case DIO_u8PORTB:
        if (u8value == 1)
 32e:	8b 81       	ldd	r24, Y+3	; 0x03
 330:	81 30       	cpi	r24, 0x01	; 1
 332:	29 f4       	brne	.+10     	; 0x33e <DIO_u8SetPortValue+0x8a>
            PORTB = 1;
 334:	e8 e3       	ldi	r30, 0x38	; 56
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	80 83       	st	Z, r24
 33c:	39 c0       	rjmp	.+114    	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 33e:	8b 81       	ldd	r24, Y+3	; 0x03
 340:	88 23       	and	r24, r24
 342:	21 f4       	brne	.+8      	; 0x34c <DIO_u8SetPortValue+0x98>
            PORTB = 0;
 344:	e8 e3       	ldi	r30, 0x38	; 56
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	10 82       	st	Z, r1
 34a:	32 c0       	rjmp	.+100    	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	89 83       	std	Y+1, r24	; 0x01
 350:	29 81       	ldd	r18, Y+1	; 0x01
 352:	2c 83       	std	Y+4, r18	; 0x04
 354:	2f c0       	rjmp	.+94     	; 0x3b4 <DIO_u8SetPortValue+0x100>
        break;

    case DIO_u8PORTC:
        if (u8value == 1)
 356:	8b 81       	ldd	r24, Y+3	; 0x03
 358:	81 30       	cpi	r24, 0x01	; 1
 35a:	29 f4       	brne	.+10     	; 0x366 <DIO_u8SetPortValue+0xb2>
            PORTC = 1;
 35c:	e5 e3       	ldi	r30, 0x35	; 53
 35e:	f0 e0       	ldi	r31, 0x00	; 0
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	80 83       	st	Z, r24
 364:	25 c0       	rjmp	.+74     	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 366:	8b 81       	ldd	r24, Y+3	; 0x03
 368:	88 23       	and	r24, r24
 36a:	21 f4       	brne	.+8      	; 0x374 <DIO_u8SetPortValue+0xc0>
            PORTC = 0;
 36c:	e5 e3       	ldi	r30, 0x35	; 53
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	10 82       	st	Z, r1
 372:	1e c0       	rjmp	.+60     	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	89 83       	std	Y+1, r24	; 0x01
 378:	39 81       	ldd	r19, Y+1	; 0x01
 37a:	3c 83       	std	Y+4, r19	; 0x04
 37c:	1b c0       	rjmp	.+54     	; 0x3b4 <DIO_u8SetPortValue+0x100>
        break;

    case DIO_u8PORTD:
        if (u8value == 1)
 37e:	8b 81       	ldd	r24, Y+3	; 0x03
 380:	81 30       	cpi	r24, 0x01	; 1
 382:	29 f4       	brne	.+10     	; 0x38e <DIO_u8SetPortValue+0xda>
            PORTD = 1;
 384:	e2 e3       	ldi	r30, 0x32	; 50
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	80 83       	st	Z, r24
 38c:	11 c0       	rjmp	.+34     	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 38e:	8b 81       	ldd	r24, Y+3	; 0x03
 390:	88 23       	and	r24, r24
 392:	21 f4       	brne	.+8      	; 0x39c <DIO_u8SetPortValue+0xe8>
            PORTD = 0;
 394:	e2 e3       	ldi	r30, 0x32	; 50
 396:	f0 e0       	ldi	r31, 0x00	; 0
 398:	10 82       	st	Z, r1
 39a:	0a c0       	rjmp	.+20     	; 0x3b0 <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	89 83       	std	Y+1, r24	; 0x01
 3a0:	89 81       	ldd	r24, Y+1	; 0x01
 3a2:	8c 83       	std	Y+4, r24	; 0x04
 3a4:	07 c0       	rjmp	.+14     	; 0x3b4 <DIO_u8SetPortValue+0x100>
        break;

    default:
        return Local_u8ErrorState =1;
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	89 83       	std	Y+1, r24	; 0x01
 3aa:	99 81       	ldd	r25, Y+1	; 0x01
 3ac:	9c 83       	std	Y+4, r25	; 0x04
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <DIO_u8SetPortValue+0x100>
        break;
    }
    return Local_u8ErrorState;
 3b0:	29 81       	ldd	r18, Y+1	; 0x01
 3b2:	2c 83       	std	Y+4, r18	; 0x04
 3b4:	8c 81       	ldd	r24, Y+4	; 0x04
}
 3b6:	26 96       	adiw	r28, 0x06	; 6
 3b8:	0f b6       	in	r0, 0x3f	; 63
 3ba:	f8 94       	cli
 3bc:	de bf       	out	0x3e, r29	; 62
 3be:	0f be       	out	0x3f, r0	; 63
 3c0:	cd bf       	out	0x3d, r28	; 61
 3c2:	cf 91       	pop	r28
 3c4:	df 91       	pop	r29
 3c6:	08 95       	ret

000003c8 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 u8port, u8 u8pin, u8 *u8value)
{
 3c8:	df 93       	push	r29
 3ca:	cf 93       	push	r28
 3cc:	cd b7       	in	r28, 0x3d	; 61
 3ce:	de b7       	in	r29, 0x3e	; 62
 3d0:	27 97       	sbiw	r28, 0x07	; 7
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
 3dc:	8a 83       	std	Y+2, r24	; 0x02
 3de:	6b 83       	std	Y+3, r22	; 0x03
 3e0:	5d 83       	std	Y+5, r21	; 0x05
 3e2:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = 0;
 3e4:	19 82       	std	Y+1, r1	; 0x01
    switch (u8port)
 3e6:	8a 81       	ldd	r24, Y+2	; 0x02
 3e8:	28 2f       	mov	r18, r24
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	3f 83       	std	Y+7, r19	; 0x07
 3ee:	2e 83       	std	Y+6, r18	; 0x06
 3f0:	4e 81       	ldd	r20, Y+6	; 0x06
 3f2:	5f 81       	ldd	r21, Y+7	; 0x07
 3f4:	41 30       	cpi	r20, 0x01	; 1
 3f6:	51 05       	cpc	r21, r1
 3f8:	59 f1       	breq	.+86     	; 0x450 <DIO_u8GetPinValue+0x88>
 3fa:	8e 81       	ldd	r24, Y+6	; 0x06
 3fc:	9f 81       	ldd	r25, Y+7	; 0x07
 3fe:	82 30       	cpi	r24, 0x02	; 2
 400:	91 05       	cpc	r25, r1
 402:	34 f4       	brge	.+12     	; 0x410 <DIO_u8GetPinValue+0x48>
 404:	2e 81       	ldd	r18, Y+6	; 0x06
 406:	3f 81       	ldd	r19, Y+7	; 0x07
 408:	21 15       	cp	r18, r1
 40a:	31 05       	cpc	r19, r1
 40c:	69 f0       	breq	.+26     	; 0x428 <DIO_u8GetPinValue+0x60>
 40e:	5c c0       	rjmp	.+184    	; 0x4c8 <DIO_u8GetPinValue+0x100>
 410:	4e 81       	ldd	r20, Y+6	; 0x06
 412:	5f 81       	ldd	r21, Y+7	; 0x07
 414:	42 30       	cpi	r20, 0x02	; 2
 416:	51 05       	cpc	r21, r1
 418:	79 f1       	breq	.+94     	; 0x478 <DIO_u8GetPinValue+0xb0>
 41a:	8e 81       	ldd	r24, Y+6	; 0x06
 41c:	9f 81       	ldd	r25, Y+7	; 0x07
 41e:	83 30       	cpi	r24, 0x03	; 3
 420:	91 05       	cpc	r25, r1
 422:	09 f4       	brne	.+2      	; 0x426 <DIO_u8GetPinValue+0x5e>
 424:	3d c0       	rjmp	.+122    	; 0x4a0 <DIO_u8GetPinValue+0xd8>
 426:	50 c0       	rjmp	.+160    	; 0x4c8 <DIO_u8GetPinValue+0x100>
    {
    case DIO_u8PORTA:
        *u8value = GET_BIT(PINA, u8pin);
 428:	e9 e3       	ldi	r30, 0x39	; 57
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	80 81       	ld	r24, Z
 42e:	28 2f       	mov	r18, r24
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	8b 81       	ldd	r24, Y+3	; 0x03
 434:	88 2f       	mov	r24, r24
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	a9 01       	movw	r20, r18
 43a:	02 c0       	rjmp	.+4      	; 0x440 <DIO_u8GetPinValue+0x78>
 43c:	55 95       	asr	r21
 43e:	47 95       	ror	r20
 440:	8a 95       	dec	r24
 442:	e2 f7       	brpl	.-8      	; 0x43c <DIO_u8GetPinValue+0x74>
 444:	ca 01       	movw	r24, r20
 446:	81 70       	andi	r24, 0x01	; 1
 448:	ec 81       	ldd	r30, Y+4	; 0x04
 44a:	fd 81       	ldd	r31, Y+5	; 0x05
 44c:	80 83       	st	Z, r24
 44e:	3e c0       	rjmp	.+124    	; 0x4cc <DIO_u8GetPinValue+0x104>
        break;
    case DIO_u8PORTB:
        *u8value = GET_BIT(PINB, u8pin);
 450:	e6 e3       	ldi	r30, 0x36	; 54
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	80 81       	ld	r24, Z
 456:	28 2f       	mov	r18, r24
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	8b 81       	ldd	r24, Y+3	; 0x03
 45c:	88 2f       	mov	r24, r24
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	a9 01       	movw	r20, r18
 462:	02 c0       	rjmp	.+4      	; 0x468 <DIO_u8GetPinValue+0xa0>
 464:	55 95       	asr	r21
 466:	47 95       	ror	r20
 468:	8a 95       	dec	r24
 46a:	e2 f7       	brpl	.-8      	; 0x464 <DIO_u8GetPinValue+0x9c>
 46c:	ca 01       	movw	r24, r20
 46e:	81 70       	andi	r24, 0x01	; 1
 470:	ec 81       	ldd	r30, Y+4	; 0x04
 472:	fd 81       	ldd	r31, Y+5	; 0x05
 474:	80 83       	st	Z, r24
 476:	2a c0       	rjmp	.+84     	; 0x4cc <DIO_u8GetPinValue+0x104>
        break;

    case DIO_u8PORTC:
        *u8value = GET_BIT(PINC, u8pin);
 478:	e3 e3       	ldi	r30, 0x33	; 51
 47a:	f0 e0       	ldi	r31, 0x00	; 0
 47c:	80 81       	ld	r24, Z
 47e:	28 2f       	mov	r18, r24
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	8b 81       	ldd	r24, Y+3	; 0x03
 484:	88 2f       	mov	r24, r24
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	a9 01       	movw	r20, r18
 48a:	02 c0       	rjmp	.+4      	; 0x490 <DIO_u8GetPinValue+0xc8>
 48c:	55 95       	asr	r21
 48e:	47 95       	ror	r20
 490:	8a 95       	dec	r24
 492:	e2 f7       	brpl	.-8      	; 0x48c <DIO_u8GetPinValue+0xc4>
 494:	ca 01       	movw	r24, r20
 496:	81 70       	andi	r24, 0x01	; 1
 498:	ec 81       	ldd	r30, Y+4	; 0x04
 49a:	fd 81       	ldd	r31, Y+5	; 0x05
 49c:	80 83       	st	Z, r24
 49e:	16 c0       	rjmp	.+44     	; 0x4cc <DIO_u8GetPinValue+0x104>
        break;

    case DIO_u8PORTD:
        *u8value = GET_BIT(PIND, u8pin);
 4a0:	e0 e3       	ldi	r30, 0x30	; 48
 4a2:	f0 e0       	ldi	r31, 0x00	; 0
 4a4:	80 81       	ld	r24, Z
 4a6:	28 2f       	mov	r18, r24
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	8b 81       	ldd	r24, Y+3	; 0x03
 4ac:	88 2f       	mov	r24, r24
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	a9 01       	movw	r20, r18
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <DIO_u8GetPinValue+0xf0>
 4b4:	55 95       	asr	r21
 4b6:	47 95       	ror	r20
 4b8:	8a 95       	dec	r24
 4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <DIO_u8GetPinValue+0xec>
 4bc:	ca 01       	movw	r24, r20
 4be:	81 70       	andi	r24, 0x01	; 1
 4c0:	ec 81       	ldd	r30, Y+4	; 0x04
 4c2:	fd 81       	ldd	r31, Y+5	; 0x05
 4c4:	80 83       	st	Z, r24
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <DIO_u8GetPinValue+0x104>
        break;

    default:
    	Local_u8ErrorState=1;
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	89 83       	std	Y+1, r24	; 0x01
        break;
    }
    return Local_u8ErrorState;
 4cc:	89 81       	ldd	r24, Y+1	; 0x01
}
 4ce:	27 96       	adiw	r28, 0x07	; 7
 4d0:	0f b6       	in	r0, 0x3f	; 63
 4d2:	f8 94       	cli
 4d4:	de bf       	out	0x3e, r29	; 62
 4d6:	0f be       	out	0x3f, r0	; 63
 4d8:	cd bf       	out	0x3d, r28	; 61
 4da:	cf 91       	pop	r28
 4dc:	df 91       	pop	r29
 4de:	08 95       	ret

000004e0 <PORT_voidInit>:
#include "PORT_private.h"
#include "PORT_interface.h"
#include "PORT_register.h"

void PORT_voidInit(void)
{
 4e0:	df 93       	push	r29
 4e2:	cf 93       	push	r28
 4e4:	cd b7       	in	r28, 0x3d	; 61
 4e6:	de b7       	in	r29, 0x3e	; 62

    DDRA = PORTA_DDR;
 4e8:	ea e3       	ldi	r30, 0x3A	; 58
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	10 82       	st	Z, r1
    DDRB = PORTB_DDR;
 4ee:	e7 e3       	ldi	r30, 0x37	; 55
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	8f ef       	ldi	r24, 0xFF	; 255
 4f4:	80 83       	st	Z, r24
    DDRC = PORTC_DDR;
 4f6:	e4 e3       	ldi	r30, 0x34	; 52
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	10 82       	st	Z, r1
    DDRD = PORTD_DDR;
 4fc:	e1 e3       	ldi	r30, 0x31	; 49
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	10 82       	st	Z, r1


    PORTA = PORTA_INITIAL_VALUE;
 502:	eb e3       	ldi	r30, 0x3B	; 59
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	83 e0       	ldi	r24, 0x03	; 3
 508:	80 83       	st	Z, r24
    PORTB = PORTB_INITIAL_VALUE;
 50a:	e8 e3       	ldi	r30, 0x38	; 56
 50c:	f0 e0       	ldi	r31, 0x00	; 0
 50e:	10 82       	st	Z, r1
    PORTC = PORTC_INITIAL_VALUE;
 510:	e5 e3       	ldi	r30, 0x35	; 53
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	10 82       	st	Z, r1
    PORTD = PORTD_INITIAL_VALUE;
 516:	e2 e3       	ldi	r30, 0x32	; 50
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	10 82       	st	Z, r1
    


}
 51c:	cf 91       	pop	r28
 51e:	df 91       	pop	r29
 520:	08 95       	ret

00000522 <main>:
								  0b01101111};
u8 counter = 0;
u8 button1,button2;

void main()
{
 522:	df 93       	push	r29
 524:	cf 93       	push	r28
 526:	cd b7       	in	r28, 0x3d	; 61
 528:	de b7       	in	r29, 0x3e	; 62
	PORT_voidInit();
 52a:	0e 94 70 02 	call	0x4e0	; 0x4e0 <PORT_voidInit>
	DIO_u8SetPortValue(DIO_u8PORTB,SevenSegmentArray[0]);
 52e:	90 91 60 00 	lds	r25, 0x0060
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	69 2f       	mov	r22, r25
 536:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <DIO_u8SetPortValue>
	while(1)
	{
		DIO_u8GetPinValue(DIO_u8PORTA,DIO_u8PIN0,&button1);
 53a:	2c e6       	ldi	r18, 0x6C	; 108
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	60 e0       	ldi	r22, 0x00	; 0
 542:	a9 01       	movw	r20, r18
 544:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <DIO_u8GetPinValue>
		DIO_u8GetPinValue(DIO_u8PORTA,DIO_u8PIN1,&button2);
 548:	2b e6       	ldi	r18, 0x6B	; 107
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	80 e0       	ldi	r24, 0x00	; 0
 54e:	61 e0       	ldi	r22, 0x01	; 1
 550:	a9 01       	movw	r20, r18
 552:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <DIO_u8GetPinValue>

		if(button1 == 0 && counter < 9)
 556:	80 91 6c 00 	lds	r24, 0x006C
 55a:	88 23       	and	r24, r24
 55c:	c9 f4       	brne	.+50     	; 0x590 <main+0x6e>
 55e:	80 91 6a 00 	lds	r24, 0x006A
 562:	89 30       	cpi	r24, 0x09	; 9
 564:	a8 f4       	brcc	.+42     	; 0x590 <main+0x6e>
		{
			DIO_u8SetPortValue(DIO_u8PORTB,SevenSegmentArray[counter]);
 566:	80 91 6a 00 	lds	r24, 0x006A
 56a:	88 2f       	mov	r24, r24
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	fc 01       	movw	r30, r24
 570:	e0 5a       	subi	r30, 0xA0	; 160
 572:	ff 4f       	sbci	r31, 0xFF	; 255
 574:	90 81       	ld	r25, Z
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	69 2f       	mov	r22, r25
 57a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <DIO_u8SetPortValue>
			counter++;
 57e:	80 91 6a 00 	lds	r24, 0x006A
 582:	8f 5f       	subi	r24, 0xFF	; 255
 584:	80 93 6a 00 	sts	0x006A, r24
			while(button1 == 0);
 588:	80 91 6c 00 	lds	r24, 0x006C
 58c:	88 23       	and	r24, r24
 58e:	e1 f3       	breq	.-8      	; 0x588 <main+0x66>
		}

		if(button2 == 0 && counter > 0)
 590:	80 91 6b 00 	lds	r24, 0x006B
 594:	88 23       	and	r24, r24
 596:	89 f6       	brne	.-94     	; 0x53a <main+0x18>
 598:	80 91 6a 00 	lds	r24, 0x006A
 59c:	88 23       	and	r24, r24
 59e:	69 f2       	breq	.-102    	; 0x53a <main+0x18>
		{
     		DIO_u8SetPortValue(DIO_u8PORTB,SevenSegmentArray[counter]);
 5a0:	80 91 6a 00 	lds	r24, 0x006A
 5a4:	88 2f       	mov	r24, r24
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	fc 01       	movw	r30, r24
 5aa:	e0 5a       	subi	r30, 0xA0	; 160
 5ac:	ff 4f       	sbci	r31, 0xFF	; 255
 5ae:	90 81       	ld	r25, Z
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	69 2f       	mov	r22, r25
 5b4:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <DIO_u8SetPortValue>
     		counter--;
 5b8:	80 91 6a 00 	lds	r24, 0x006A
 5bc:	81 50       	subi	r24, 0x01	; 1
 5be:	80 93 6a 00 	sts	0x006A, r24
    		while(button2 == 0);
 5c2:	80 91 6b 00 	lds	r24, 0x006B
 5c6:	88 23       	and	r24, r24
 5c8:	e1 f3       	breq	.-8      	; 0x5c2 <main+0xa0>
 5ca:	b7 cf       	rjmp	.-146    	; 0x53a <main+0x18>

000005cc <_exit>:
 5cc:	f8 94       	cli

000005ce <__stop_program>:
 5ce:	ff cf       	rjmp	.-2      	; 0x5ce <__stop_program>
