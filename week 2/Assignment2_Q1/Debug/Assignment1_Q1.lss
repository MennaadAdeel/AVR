
Assignment1_Q1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000059c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000003  00800060  00800060  00000610  2**0
                  ALLOC
  2 .stab         00000a44  00000000  00000000  00000610  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000007fb  00000000  00000000  00001054  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a3 36       	cpi	r26, 0x63	; 99
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 86 02 	call	0x50c	; 0x50c <main>
  74:	0c 94 cc 02 	jmp	0x598	; 0x598 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_u8SetPinValue>:
}
*/


u8 DIO_u8SetPinValue(u8 u8port, u8 u8pin, u8 u8value)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
  84:	27 97       	sbiw	r28, 0x07	; 7
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	f8 94       	cli
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	cd bf       	out	0x3d, r28	; 61
  90:	8a 83       	std	Y+2, r24	; 0x02
  92:	6b 83       	std	Y+3, r22	; 0x03
  94:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = 0;
  96:	19 82       	std	Y+1, r1	; 0x01
    switch (u8port)
  98:	8a 81       	ldd	r24, Y+2	; 0x02
  9a:	28 2f       	mov	r18, r24
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	3f 83       	std	Y+7, r19	; 0x07
  a0:	2e 83       	std	Y+6, r18	; 0x06
  a2:	8e 81       	ldd	r24, Y+6	; 0x06
  a4:	9f 81       	ldd	r25, Y+7	; 0x07
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	91 05       	cpc	r25, r1
  aa:	09 f4       	brne	.+2      	; 0xae <DIO_u8SetPinValue+0x32>
  ac:	4b c0       	rjmp	.+150    	; 0x144 <DIO_u8SetPinValue+0xc8>
  ae:	2e 81       	ldd	r18, Y+6	; 0x06
  b0:	3f 81       	ldd	r19, Y+7	; 0x07
  b2:	22 30       	cpi	r18, 0x02	; 2
  b4:	31 05       	cpc	r19, r1
  b6:	2c f4       	brge	.+10     	; 0xc2 <DIO_u8SetPinValue+0x46>
  b8:	8e 81       	ldd	r24, Y+6	; 0x06
  ba:	9f 81       	ldd	r25, Y+7	; 0x07
  bc:	00 97       	sbiw	r24, 0x00	; 0
  be:	71 f0       	breq	.+28     	; 0xdc <DIO_u8SetPinValue+0x60>
  c0:	dd c0       	rjmp	.+442    	; 0x27c <DIO_u8SetPinValue+0x200>
  c2:	2e 81       	ldd	r18, Y+6	; 0x06
  c4:	3f 81       	ldd	r19, Y+7	; 0x07
  c6:	22 30       	cpi	r18, 0x02	; 2
  c8:	31 05       	cpc	r19, r1
  ca:	09 f4       	brne	.+2      	; 0xce <DIO_u8SetPinValue+0x52>
  cc:	6f c0       	rjmp	.+222    	; 0x1ac <DIO_u8SetPinValue+0x130>
  ce:	8e 81       	ldd	r24, Y+6	; 0x06
  d0:	9f 81       	ldd	r25, Y+7	; 0x07
  d2:	83 30       	cpi	r24, 0x03	; 3
  d4:	91 05       	cpc	r25, r1
  d6:	09 f4       	brne	.+2      	; 0xda <DIO_u8SetPinValue+0x5e>
  d8:	9d c0       	rjmp	.+314    	; 0x214 <DIO_u8SetPinValue+0x198>
  da:	d0 c0       	rjmp	.+416    	; 0x27c <DIO_u8SetPinValue+0x200>
    {
    case DIO_u8PORTA:
        if (u8value == 1)
  dc:	8c 81       	ldd	r24, Y+4	; 0x04
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	a1 f4       	brne	.+40     	; 0x10a <DIO_u8SetPinValue+0x8e>
            SET_BIT(PORTA, u8pin);
  e2:	ab e3       	ldi	r26, 0x3B	; 59
  e4:	b0 e0       	ldi	r27, 0x00	; 0
  e6:	eb e3       	ldi	r30, 0x3B	; 59
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	48 2f       	mov	r20, r24
  ee:	8b 81       	ldd	r24, Y+3	; 0x03
  f0:	28 2f       	mov	r18, r24
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 2e       	mov	r0, r18
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_u8SetPinValue+0x84>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	0a 94       	dec	r0
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_u8SetPinValue+0x80>
 104:	84 2b       	or	r24, r20
 106:	8c 93       	st	X, r24
 108:	be c0       	rjmp	.+380    	; 0x286 <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 10a:	8c 81       	ldd	r24, Y+4	; 0x04
 10c:	88 23       	and	r24, r24
 10e:	a9 f4       	brne	.+42     	; 0x13a <DIO_u8SetPinValue+0xbe>
            CLR_BIT(PORTA, u8pin);
 110:	ab e3       	ldi	r26, 0x3B	; 59
 112:	b0 e0       	ldi	r27, 0x00	; 0
 114:	eb e3       	ldi	r30, 0x3B	; 59
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	48 2f       	mov	r20, r24
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	28 2f       	mov	r18, r24
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 2e       	mov	r0, r18
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_u8SetPinValue+0xb2>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_u8SetPinValue+0xae>
 132:	80 95       	com	r24
 134:	84 23       	and	r24, r20
 136:	8c 93       	st	X, r24
 138:	a6 c0       	rjmp	.+332    	; 0x286 <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	89 83       	std	Y+1, r24	; 0x01
 13e:	99 81       	ldd	r25, Y+1	; 0x01
 140:	9d 83       	std	Y+5, r25	; 0x05
 142:	a3 c0       	rjmp	.+326    	; 0x28a <DIO_u8SetPinValue+0x20e>
        break;
    case DIO_u8PORTB:
        if (u8value == 1)
 144:	8c 81       	ldd	r24, Y+4	; 0x04
 146:	81 30       	cpi	r24, 0x01	; 1
 148:	a1 f4       	brne	.+40     	; 0x172 <DIO_u8SetPinValue+0xf6>
            SET_BIT(PORTB, u8pin);
 14a:	a8 e3       	ldi	r26, 0x38	; 56
 14c:	b0 e0       	ldi	r27, 0x00	; 0
 14e:	e8 e3       	ldi	r30, 0x38	; 56
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	48 2f       	mov	r20, r24
 156:	8b 81       	ldd	r24, Y+3	; 0x03
 158:	28 2f       	mov	r18, r24
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	02 2e       	mov	r0, r18
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_u8SetPinValue+0xec>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	0a 94       	dec	r0
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_u8SetPinValue+0xe8>
 16c:	84 2b       	or	r24, r20
 16e:	8c 93       	st	X, r24
 170:	8a c0       	rjmp	.+276    	; 0x286 <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 172:	8c 81       	ldd	r24, Y+4	; 0x04
 174:	88 23       	and	r24, r24
 176:	a9 f4       	brne	.+42     	; 0x1a2 <DIO_u8SetPinValue+0x126>
            CLR_BIT(PORTB, u8pin);
 178:	a8 e3       	ldi	r26, 0x38	; 56
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	e8 e3       	ldi	r30, 0x38	; 56
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	48 2f       	mov	r20, r24
 184:	8b 81       	ldd	r24, Y+3	; 0x03
 186:	28 2f       	mov	r18, r24
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 2e       	mov	r0, r18
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_u8SetPinValue+0x11a>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	0a 94       	dec	r0
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_u8SetPinValue+0x116>
 19a:	80 95       	com	r24
 19c:	84 23       	and	r24, r20
 19e:	8c 93       	st	X, r24
 1a0:	72 c0       	rjmp	.+228    	; 0x286 <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	89 83       	std	Y+1, r24	; 0x01
 1a6:	29 81       	ldd	r18, Y+1	; 0x01
 1a8:	2d 83       	std	Y+5, r18	; 0x05
 1aa:	6f c0       	rjmp	.+222    	; 0x28a <DIO_u8SetPinValue+0x20e>
        break;

    case DIO_u8PORTC:
        if (u8value == 1)
 1ac:	8c 81       	ldd	r24, Y+4	; 0x04
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	a1 f4       	brne	.+40     	; 0x1da <DIO_u8SetPinValue+0x15e>
            SET_BIT(PORTC, u8pin);
 1b2:	a5 e3       	ldi	r26, 0x35	; 53
 1b4:	b0 e0       	ldi	r27, 0x00	; 0
 1b6:	e5 e3       	ldi	r30, 0x35	; 53
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	48 2f       	mov	r20, r24
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	28 2f       	mov	r18, r24
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 2e       	mov	r0, r18
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_u8SetPinValue+0x154>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	0a 94       	dec	r0
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_u8SetPinValue+0x150>
 1d4:	84 2b       	or	r24, r20
 1d6:	8c 93       	st	X, r24
 1d8:	56 c0       	rjmp	.+172    	; 0x286 <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 1da:	8c 81       	ldd	r24, Y+4	; 0x04
 1dc:	88 23       	and	r24, r24
 1de:	a9 f4       	brne	.+42     	; 0x20a <DIO_u8SetPinValue+0x18e>
            CLR_BIT(PORTC, u8pin);
 1e0:	a5 e3       	ldi	r26, 0x35	; 53
 1e2:	b0 e0       	ldi	r27, 0x00	; 0
 1e4:	e5 e3       	ldi	r30, 0x35	; 53
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	48 2f       	mov	r20, r24
 1ec:	8b 81       	ldd	r24, Y+3	; 0x03
 1ee:	28 2f       	mov	r18, r24
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 2e       	mov	r0, r18
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_u8SetPinValue+0x182>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	0a 94       	dec	r0
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_u8SetPinValue+0x17e>
 202:	80 95       	com	r24
 204:	84 23       	and	r24, r20
 206:	8c 93       	st	X, r24
 208:	3e c0       	rjmp	.+124    	; 0x286 <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	89 83       	std	Y+1, r24	; 0x01
 20e:	39 81       	ldd	r19, Y+1	; 0x01
 210:	3d 83       	std	Y+5, r19	; 0x05
 212:	3b c0       	rjmp	.+118    	; 0x28a <DIO_u8SetPinValue+0x20e>
        break;

    case DIO_u8PORTD:
        if (u8value == 1)
 214:	8c 81       	ldd	r24, Y+4	; 0x04
 216:	81 30       	cpi	r24, 0x01	; 1
 218:	a1 f4       	brne	.+40     	; 0x242 <DIO_u8SetPinValue+0x1c6>
            SET_BIT(PORTD, u8pin);
 21a:	a2 e3       	ldi	r26, 0x32	; 50
 21c:	b0 e0       	ldi	r27, 0x00	; 0
 21e:	e2 e3       	ldi	r30, 0x32	; 50
 220:	f0 e0       	ldi	r31, 0x00	; 0
 222:	80 81       	ld	r24, Z
 224:	48 2f       	mov	r20, r24
 226:	8b 81       	ldd	r24, Y+3	; 0x03
 228:	28 2f       	mov	r18, r24
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 2e       	mov	r0, r18
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_u8SetPinValue+0x1bc>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	0a 94       	dec	r0
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_u8SetPinValue+0x1b8>
 23c:	84 2b       	or	r24, r20
 23e:	8c 93       	st	X, r24
 240:	22 c0       	rjmp	.+68     	; 0x286 <DIO_u8SetPinValue+0x20a>
        else if (u8value == 0)
 242:	8c 81       	ldd	r24, Y+4	; 0x04
 244:	88 23       	and	r24, r24
 246:	a9 f4       	brne	.+42     	; 0x272 <DIO_u8SetPinValue+0x1f6>
            CLR_BIT(PORTD, u8pin);
 248:	a2 e3       	ldi	r26, 0x32	; 50
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	e2 e3       	ldi	r30, 0x32	; 50
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	48 2f       	mov	r20, r24
 254:	8b 81       	ldd	r24, Y+3	; 0x03
 256:	28 2f       	mov	r18, r24
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 2e       	mov	r0, r18
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_u8SetPinValue+0x1ea>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	0a 94       	dec	r0
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_u8SetPinValue+0x1e6>
 26a:	80 95       	com	r24
 26c:	84 23       	and	r24, r20
 26e:	8c 93       	st	X, r24
 270:	0a c0       	rjmp	.+20     	; 0x286 <DIO_u8SetPinValue+0x20a>
        else
            return Local_u8ErrorState =1;
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	89 83       	std	Y+1, r24	; 0x01
 276:	89 81       	ldd	r24, Y+1	; 0x01
 278:	8d 83       	std	Y+5, r24	; 0x05
 27a:	07 c0       	rjmp	.+14     	; 0x28a <DIO_u8SetPinValue+0x20e>
        break;

    default:
        return Local_u8ErrorState =1;
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	89 83       	std	Y+1, r24	; 0x01
 280:	99 81       	ldd	r25, Y+1	; 0x01
 282:	9d 83       	std	Y+5, r25	; 0x05
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_u8SetPinValue+0x20e>
        break;
    }
    return Local_u8ErrorState;
 286:	29 81       	ldd	r18, Y+1	; 0x01
 288:	2d 83       	std	Y+5, r18	; 0x05
 28a:	8d 81       	ldd	r24, Y+5	; 0x05
}
 28c:	27 96       	adiw	r28, 0x07	; 7
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	cf 91       	pop	r28
 29a:	df 91       	pop	r29
 29c:	08 95       	ret

0000029e <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 u8port, u8 u8value)
{
 29e:	df 93       	push	r29
 2a0:	cf 93       	push	r28
 2a2:	00 d0       	rcall	.+0      	; 0x2a4 <DIO_u8SetPortValue+0x6>
 2a4:	00 d0       	rcall	.+0      	; 0x2a6 <DIO_u8SetPortValue+0x8>
 2a6:	00 d0       	rcall	.+0      	; 0x2a8 <DIO_u8SetPortValue+0xa>
 2a8:	cd b7       	in	r28, 0x3d	; 61
 2aa:	de b7       	in	r29, 0x3e	; 62
 2ac:	8a 83       	std	Y+2, r24	; 0x02
 2ae:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
 2b0:	19 82       	std	Y+1, r1	; 0x01
    switch (u8port)
 2b2:	8a 81       	ldd	r24, Y+2	; 0x02
 2b4:	28 2f       	mov	r18, r24
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	3e 83       	std	Y+6, r19	; 0x06
 2ba:	2d 83       	std	Y+5, r18	; 0x05
 2bc:	8d 81       	ldd	r24, Y+5	; 0x05
 2be:	9e 81       	ldd	r25, Y+6	; 0x06
 2c0:	81 30       	cpi	r24, 0x01	; 1
 2c2:	91 05       	cpc	r25, r1
 2c4:	49 f1       	breq	.+82     	; 0x318 <DIO_u8SetPortValue+0x7a>
 2c6:	2d 81       	ldd	r18, Y+5	; 0x05
 2c8:	3e 81       	ldd	r19, Y+6	; 0x06
 2ca:	22 30       	cpi	r18, 0x02	; 2
 2cc:	31 05       	cpc	r19, r1
 2ce:	2c f4       	brge	.+10     	; 0x2da <DIO_u8SetPortValue+0x3c>
 2d0:	8d 81       	ldd	r24, Y+5	; 0x05
 2d2:	9e 81       	ldd	r25, Y+6	; 0x06
 2d4:	00 97       	sbiw	r24, 0x00	; 0
 2d6:	61 f0       	breq	.+24     	; 0x2f0 <DIO_u8SetPortValue+0x52>
 2d8:	5b c0       	rjmp	.+182    	; 0x390 <DIO_u8SetPortValue+0xf2>
 2da:	2d 81       	ldd	r18, Y+5	; 0x05
 2dc:	3e 81       	ldd	r19, Y+6	; 0x06
 2de:	22 30       	cpi	r18, 0x02	; 2
 2e0:	31 05       	cpc	r19, r1
 2e2:	71 f1       	breq	.+92     	; 0x340 <DIO_u8SetPortValue+0xa2>
 2e4:	8d 81       	ldd	r24, Y+5	; 0x05
 2e6:	9e 81       	ldd	r25, Y+6	; 0x06
 2e8:	83 30       	cpi	r24, 0x03	; 3
 2ea:	91 05       	cpc	r25, r1
 2ec:	e9 f1       	breq	.+122    	; 0x368 <DIO_u8SetPortValue+0xca>
 2ee:	50 c0       	rjmp	.+160    	; 0x390 <DIO_u8SetPortValue+0xf2>
    {
    case DIO_u8PORTA:
        if (u8value == 1)
 2f0:	8b 81       	ldd	r24, Y+3	; 0x03
 2f2:	81 30       	cpi	r24, 0x01	; 1
 2f4:	29 f4       	brne	.+10     	; 0x300 <DIO_u8SetPortValue+0x62>
            PORTA = 1;
 2f6:	eb e3       	ldi	r30, 0x3B	; 59
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	80 83       	st	Z, r24
 2fe:	4d c0       	rjmp	.+154    	; 0x39a <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 300:	8b 81       	ldd	r24, Y+3	; 0x03
 302:	88 23       	and	r24, r24
 304:	21 f4       	brne	.+8      	; 0x30e <DIO_u8SetPortValue+0x70>
            PORTA = 0;
 306:	eb e3       	ldi	r30, 0x3B	; 59
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	10 82       	st	Z, r1
 30c:	46 c0       	rjmp	.+140    	; 0x39a <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	89 83       	std	Y+1, r24	; 0x01
 312:	99 81       	ldd	r25, Y+1	; 0x01
 314:	9c 83       	std	Y+4, r25	; 0x04
 316:	43 c0       	rjmp	.+134    	; 0x39e <DIO_u8SetPortValue+0x100>
        break;

    case DIO_u8PORTB:
        if (u8value == 1)
 318:	8b 81       	ldd	r24, Y+3	; 0x03
 31a:	81 30       	cpi	r24, 0x01	; 1
 31c:	29 f4       	brne	.+10     	; 0x328 <DIO_u8SetPortValue+0x8a>
            PORTB = 1;
 31e:	e8 e3       	ldi	r30, 0x38	; 56
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	80 83       	st	Z, r24
 326:	39 c0       	rjmp	.+114    	; 0x39a <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 328:	8b 81       	ldd	r24, Y+3	; 0x03
 32a:	88 23       	and	r24, r24
 32c:	21 f4       	brne	.+8      	; 0x336 <DIO_u8SetPortValue+0x98>
            PORTB = 0;
 32e:	e8 e3       	ldi	r30, 0x38	; 56
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	10 82       	st	Z, r1
 334:	32 c0       	rjmp	.+100    	; 0x39a <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	89 83       	std	Y+1, r24	; 0x01
 33a:	29 81       	ldd	r18, Y+1	; 0x01
 33c:	2c 83       	std	Y+4, r18	; 0x04
 33e:	2f c0       	rjmp	.+94     	; 0x39e <DIO_u8SetPortValue+0x100>
        break;

    case DIO_u8PORTC:
        if (u8value == 1)
 340:	8b 81       	ldd	r24, Y+3	; 0x03
 342:	81 30       	cpi	r24, 0x01	; 1
 344:	29 f4       	brne	.+10     	; 0x350 <DIO_u8SetPortValue+0xb2>
            PORTC = 1;
 346:	e5 e3       	ldi	r30, 0x35	; 53
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	80 83       	st	Z, r24
 34e:	25 c0       	rjmp	.+74     	; 0x39a <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 350:	8b 81       	ldd	r24, Y+3	; 0x03
 352:	88 23       	and	r24, r24
 354:	21 f4       	brne	.+8      	; 0x35e <DIO_u8SetPortValue+0xc0>
            PORTC = 0;
 356:	e5 e3       	ldi	r30, 0x35	; 53
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	10 82       	st	Z, r1
 35c:	1e c0       	rjmp	.+60     	; 0x39a <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	89 83       	std	Y+1, r24	; 0x01
 362:	39 81       	ldd	r19, Y+1	; 0x01
 364:	3c 83       	std	Y+4, r19	; 0x04
 366:	1b c0       	rjmp	.+54     	; 0x39e <DIO_u8SetPortValue+0x100>
        break;

    case DIO_u8PORTD:
        if (u8value == 1)
 368:	8b 81       	ldd	r24, Y+3	; 0x03
 36a:	81 30       	cpi	r24, 0x01	; 1
 36c:	29 f4       	brne	.+10     	; 0x378 <DIO_u8SetPortValue+0xda>
            PORTD = 1;
 36e:	e2 e3       	ldi	r30, 0x32	; 50
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	80 83       	st	Z, r24
 376:	11 c0       	rjmp	.+34     	; 0x39a <DIO_u8SetPortValue+0xfc>
        else if (u8value == 0)
 378:	8b 81       	ldd	r24, Y+3	; 0x03
 37a:	88 23       	and	r24, r24
 37c:	21 f4       	brne	.+8      	; 0x386 <DIO_u8SetPortValue+0xe8>
            PORTD = 0;
 37e:	e2 e3       	ldi	r30, 0x32	; 50
 380:	f0 e0       	ldi	r31, 0x00	; 0
 382:	10 82       	st	Z, r1
 384:	0a c0       	rjmp	.+20     	; 0x39a <DIO_u8SetPortValue+0xfc>
        else
            return Local_u8ErrorState =1;
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	89 83       	std	Y+1, r24	; 0x01
 38a:	89 81       	ldd	r24, Y+1	; 0x01
 38c:	8c 83       	std	Y+4, r24	; 0x04
 38e:	07 c0       	rjmp	.+14     	; 0x39e <DIO_u8SetPortValue+0x100>
        break;

    default:
        return Local_u8ErrorState =1;
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	89 83       	std	Y+1, r24	; 0x01
 394:	99 81       	ldd	r25, Y+1	; 0x01
 396:	9c 83       	std	Y+4, r25	; 0x04
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_u8SetPortValue+0x100>
        break;
    }
    return Local_u8ErrorState;
 39a:	29 81       	ldd	r18, Y+1	; 0x01
 39c:	2c 83       	std	Y+4, r18	; 0x04
 39e:	8c 81       	ldd	r24, Y+4	; 0x04
}
 3a0:	26 96       	adiw	r28, 0x06	; 6
 3a2:	0f b6       	in	r0, 0x3f	; 63
 3a4:	f8 94       	cli
 3a6:	de bf       	out	0x3e, r29	; 62
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	cd bf       	out	0x3d, r28	; 61
 3ac:	cf 91       	pop	r28
 3ae:	df 91       	pop	r29
 3b0:	08 95       	ret

000003b2 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 u8port, u8 u8pin, u8 *u8value)
{
 3b2:	df 93       	push	r29
 3b4:	cf 93       	push	r28
 3b6:	cd b7       	in	r28, 0x3d	; 61
 3b8:	de b7       	in	r29, 0x3e	; 62
 3ba:	27 97       	sbiw	r28, 0x07	; 7
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	de bf       	out	0x3e, r29	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	cd bf       	out	0x3d, r28	; 61
 3c6:	8a 83       	std	Y+2, r24	; 0x02
 3c8:	6b 83       	std	Y+3, r22	; 0x03
 3ca:	5d 83       	std	Y+5, r21	; 0x05
 3cc:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = 0;
 3ce:	19 82       	std	Y+1, r1	; 0x01
    switch (u8port)
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	28 2f       	mov	r18, r24
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	3f 83       	std	Y+7, r19	; 0x07
 3d8:	2e 83       	std	Y+6, r18	; 0x06
 3da:	4e 81       	ldd	r20, Y+6	; 0x06
 3dc:	5f 81       	ldd	r21, Y+7	; 0x07
 3de:	41 30       	cpi	r20, 0x01	; 1
 3e0:	51 05       	cpc	r21, r1
 3e2:	59 f1       	breq	.+86     	; 0x43a <DIO_u8GetPinValue+0x88>
 3e4:	8e 81       	ldd	r24, Y+6	; 0x06
 3e6:	9f 81       	ldd	r25, Y+7	; 0x07
 3e8:	82 30       	cpi	r24, 0x02	; 2
 3ea:	91 05       	cpc	r25, r1
 3ec:	34 f4       	brge	.+12     	; 0x3fa <DIO_u8GetPinValue+0x48>
 3ee:	2e 81       	ldd	r18, Y+6	; 0x06
 3f0:	3f 81       	ldd	r19, Y+7	; 0x07
 3f2:	21 15       	cp	r18, r1
 3f4:	31 05       	cpc	r19, r1
 3f6:	69 f0       	breq	.+26     	; 0x412 <DIO_u8GetPinValue+0x60>
 3f8:	5c c0       	rjmp	.+184    	; 0x4b2 <__stack+0x53>
 3fa:	4e 81       	ldd	r20, Y+6	; 0x06
 3fc:	5f 81       	ldd	r21, Y+7	; 0x07
 3fe:	42 30       	cpi	r20, 0x02	; 2
 400:	51 05       	cpc	r21, r1
 402:	79 f1       	breq	.+94     	; 0x462 <__stack+0x3>
 404:	8e 81       	ldd	r24, Y+6	; 0x06
 406:	9f 81       	ldd	r25, Y+7	; 0x07
 408:	83 30       	cpi	r24, 0x03	; 3
 40a:	91 05       	cpc	r25, r1
 40c:	09 f4       	brne	.+2      	; 0x410 <DIO_u8GetPinValue+0x5e>
 40e:	3d c0       	rjmp	.+122    	; 0x48a <__stack+0x2b>
 410:	50 c0       	rjmp	.+160    	; 0x4b2 <__stack+0x53>
    {
    case DIO_u8PORTA:
        *u8value = GET_BIT(PINA, u8pin);
 412:	e9 e3       	ldi	r30, 0x39	; 57
 414:	f0 e0       	ldi	r31, 0x00	; 0
 416:	80 81       	ld	r24, Z
 418:	28 2f       	mov	r18, r24
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	8b 81       	ldd	r24, Y+3	; 0x03
 41e:	88 2f       	mov	r24, r24
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	a9 01       	movw	r20, r18
 424:	02 c0       	rjmp	.+4      	; 0x42a <DIO_u8GetPinValue+0x78>
 426:	55 95       	asr	r21
 428:	47 95       	ror	r20
 42a:	8a 95       	dec	r24
 42c:	e2 f7       	brpl	.-8      	; 0x426 <DIO_u8GetPinValue+0x74>
 42e:	ca 01       	movw	r24, r20
 430:	81 70       	andi	r24, 0x01	; 1
 432:	ec 81       	ldd	r30, Y+4	; 0x04
 434:	fd 81       	ldd	r31, Y+5	; 0x05
 436:	80 83       	st	Z, r24
 438:	3e c0       	rjmp	.+124    	; 0x4b6 <__stack+0x57>
        break;
    case DIO_u8PORTB:
        *u8value = GET_BIT(PINB, u8pin);
 43a:	e6 e3       	ldi	r30, 0x36	; 54
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	80 81       	ld	r24, Z
 440:	28 2f       	mov	r18, r24
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	8b 81       	ldd	r24, Y+3	; 0x03
 446:	88 2f       	mov	r24, r24
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	a9 01       	movw	r20, r18
 44c:	02 c0       	rjmp	.+4      	; 0x452 <DIO_u8GetPinValue+0xa0>
 44e:	55 95       	asr	r21
 450:	47 95       	ror	r20
 452:	8a 95       	dec	r24
 454:	e2 f7       	brpl	.-8      	; 0x44e <DIO_u8GetPinValue+0x9c>
 456:	ca 01       	movw	r24, r20
 458:	81 70       	andi	r24, 0x01	; 1
 45a:	ec 81       	ldd	r30, Y+4	; 0x04
 45c:	fd 81       	ldd	r31, Y+5	; 0x05
 45e:	80 83       	st	Z, r24
 460:	2a c0       	rjmp	.+84     	; 0x4b6 <__stack+0x57>
        break;

    case DIO_u8PORTC:
        *u8value = GET_BIT(PINC, u8pin);
 462:	e3 e3       	ldi	r30, 0x33	; 51
 464:	f0 e0       	ldi	r31, 0x00	; 0
 466:	80 81       	ld	r24, Z
 468:	28 2f       	mov	r18, r24
 46a:	30 e0       	ldi	r19, 0x00	; 0
 46c:	8b 81       	ldd	r24, Y+3	; 0x03
 46e:	88 2f       	mov	r24, r24
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	a9 01       	movw	r20, r18
 474:	02 c0       	rjmp	.+4      	; 0x47a <__stack+0x1b>
 476:	55 95       	asr	r21
 478:	47 95       	ror	r20
 47a:	8a 95       	dec	r24
 47c:	e2 f7       	brpl	.-8      	; 0x476 <__stack+0x17>
 47e:	ca 01       	movw	r24, r20
 480:	81 70       	andi	r24, 0x01	; 1
 482:	ec 81       	ldd	r30, Y+4	; 0x04
 484:	fd 81       	ldd	r31, Y+5	; 0x05
 486:	80 83       	st	Z, r24
 488:	16 c0       	rjmp	.+44     	; 0x4b6 <__stack+0x57>
        break;

    case DIO_u8PORTD:
        *u8value = GET_BIT(PIND, u8pin);
 48a:	e0 e3       	ldi	r30, 0x30	; 48
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	28 2f       	mov	r18, r24
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	8b 81       	ldd	r24, Y+3	; 0x03
 496:	88 2f       	mov	r24, r24
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	a9 01       	movw	r20, r18
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <__stack+0x43>
 49e:	55 95       	asr	r21
 4a0:	47 95       	ror	r20
 4a2:	8a 95       	dec	r24
 4a4:	e2 f7       	brpl	.-8      	; 0x49e <__stack+0x3f>
 4a6:	ca 01       	movw	r24, r20
 4a8:	81 70       	andi	r24, 0x01	; 1
 4aa:	ec 81       	ldd	r30, Y+4	; 0x04
 4ac:	fd 81       	ldd	r31, Y+5	; 0x05
 4ae:	80 83       	st	Z, r24
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__stack+0x57>
        break;

    default:
    	Local_u8ErrorState=1;
 4b2:	81 e0       	ldi	r24, 0x01	; 1
 4b4:	89 83       	std	Y+1, r24	; 0x01
        break;
    }
    return Local_u8ErrorState;
 4b6:	89 81       	ldd	r24, Y+1	; 0x01
}
 4b8:	27 96       	adiw	r28, 0x07	; 7
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	f8 94       	cli
 4be:	de bf       	out	0x3e, r29	; 62
 4c0:	0f be       	out	0x3f, r0	; 63
 4c2:	cd bf       	out	0x3d, r28	; 61
 4c4:	cf 91       	pop	r28
 4c6:	df 91       	pop	r29
 4c8:	08 95       	ret

000004ca <PORT_voidInit>:
#include "PORT_private.h"
#include "PORT_interface.h"
#include "PORT_register.h"

void PORT_voidInit(void)
{
 4ca:	df 93       	push	r29
 4cc:	cf 93       	push	r28
 4ce:	cd b7       	in	r28, 0x3d	; 61
 4d0:	de b7       	in	r29, 0x3e	; 62

    DDRA = PORTA_DDR;
 4d2:	ea e3       	ldi	r30, 0x3A	; 58
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	83 e0       	ldi	r24, 0x03	; 3
 4d8:	80 83       	st	Z, r24
    DDRB = PORTB_DDR;
 4da:	e7 e3       	ldi	r30, 0x37	; 55
 4dc:	f0 e0       	ldi	r31, 0x00	; 0
 4de:	10 82       	st	Z, r1
    DDRC = PORTC_DDR;
 4e0:	e4 e3       	ldi	r30, 0x34	; 52
 4e2:	f0 e0       	ldi	r31, 0x00	; 0
 4e4:	10 82       	st	Z, r1
    DDRD = PORTD_DDR;
 4e6:	e1 e3       	ldi	r30, 0x31	; 49
 4e8:	f0 e0       	ldi	r31, 0x00	; 0
 4ea:	10 82       	st	Z, r1


    PORTA = PORTA_INITIAL_VALUE;
 4ec:	eb e3       	ldi	r30, 0x3B	; 59
 4ee:	f0 e0       	ldi	r31, 0x00	; 0
 4f0:	10 82       	st	Z, r1
    PORTB = PORTB_INITIAL_VALUE;
 4f2:	e8 e3       	ldi	r30, 0x38	; 56
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	87 e0       	ldi	r24, 0x07	; 7
 4f8:	80 83       	st	Z, r24
    PORTC = PORTC_INITIAL_VALUE;
 4fa:	e5 e3       	ldi	r30, 0x35	; 53
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	10 82       	st	Z, r1
    PORTD = PORTD_INITIAL_VALUE;
 500:	e2 e3       	ldi	r30, 0x32	; 50
 502:	f0 e0       	ldi	r31, 0x00	; 0
 504:	10 82       	st	Z, r1
    


}
 506:	cf 91       	pop	r28
 508:	df 91       	pop	r29
 50a:	08 95       	ret

0000050c <main>:
#include "DIO_config.h"
#include <util/delay.h>

u8 switch1,switch2,switch3 ;
void main()
{
 50c:	df 93       	push	r29
 50e:	cf 93       	push	r28
 510:	cd b7       	in	r28, 0x3d	; 61
 512:	de b7       	in	r29, 0x3e	; 62
	PORT_voidInit();
 514:	0e 94 65 02 	call	0x4ca	; 0x4ca <PORT_voidInit>
	while(1)
	{
		DIO_u8GetPinValue(DIO_u8PORTB,DIO_u8PIN0, &switch1);
 518:	22 e6       	ldi	r18, 0x62	; 98
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	60 e0       	ldi	r22, 0x00	; 0
 520:	a9 01       	movw	r20, r18
 522:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_u8GetPinValue>
		if(switch1 == 0 )  //if switch 0 is pressed
 526:	80 91 62 00 	lds	r24, 0x0062
 52a:	88 23       	and	r24, r24
 52c:	51 f4       	brne	.+20     	; 0x542 <main+0x36>
		{
			DIO_u8SetPinValue(DIO_u8PORTA, DIO_u8PIN0, DIO_u8PIN_HIGH);  //turn on led 1
 52e:	80 e0       	ldi	r24, 0x00	; 0
 530:	60 e0       	ldi	r22, 0x00	; 0
 532:	41 e0       	ldi	r20, 0x01	; 1
 534:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinValue>
			DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN1,DIO_u8PIN_LOW);  //turn off led 2
 538:	80 e0       	ldi	r24, 0x00	; 0
 53a:	61 e0       	ldi	r22, 0x01	; 1
 53c:	40 e0       	ldi	r20, 0x00	; 0
 53e:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinValue>
		}
		DIO_u8GetPinValue(DIO_u8PORTB,DIO_u8PIN1,&switch2);
 542:	21 e6       	ldi	r18, 0x61	; 97
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	61 e0       	ldi	r22, 0x01	; 1
 54a:	a9 01       	movw	r20, r18
 54c:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_u8GetPinValue>
		if(switch2 == 0 )  //if switch 2 is pressed
 550:	80 91 61 00 	lds	r24, 0x0061
 554:	88 23       	and	r24, r24
 556:	51 f4       	brne	.+20     	; 0x56c <main+0x60>
		{
			DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN0,DIO_u8PIN_LOW);  //turn off led 1
 558:	80 e0       	ldi	r24, 0x00	; 0
 55a:	60 e0       	ldi	r22, 0x00	; 0
 55c:	40 e0       	ldi	r20, 0x00	; 0
 55e:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinValue>
			DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN1,DIO_u8PIN_HIGH);  //turn on led 2
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	61 e0       	ldi	r22, 0x01	; 1
 566:	41 e0       	ldi	r20, 0x01	; 1
 568:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinValue>
		}
		DIO_u8GetPinValue(DIO_u8PORTB,DIO_u8PIN2,&switch3);
 56c:	20 e6       	ldi	r18, 0x60	; 96
 56e:	30 e0       	ldi	r19, 0x00	; 0
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	62 e0       	ldi	r22, 0x02	; 2
 574:	a9 01       	movw	r20, r18
 576:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_u8GetPinValue>
		if(switch3 == 0 )  //if switch 3 is pressed
 57a:	80 91 60 00 	lds	r24, 0x0060
 57e:	88 23       	and	r24, r24
 580:	59 f6       	brne	.-106    	; 0x518 <main+0xc>
		{
			DIO_u8SetPinValue(DIO_u8PORTA, DIO_u8PIN0, DIO_u8PIN_HIGH);  //turn on led 1
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	60 e0       	ldi	r22, 0x00	; 0
 586:	41 e0       	ldi	r20, 0x01	; 1
 588:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinValue>
			DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN1,DIO_u8PIN_HIGH);  //turn on led 2
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	61 e0       	ldi	r22, 0x01	; 1
 590:	41 e0       	ldi	r20, 0x01	; 1
 592:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_u8SetPinValue>
 596:	c0 cf       	rjmp	.-128    	; 0x518 <main+0xc>

00000598 <_exit>:
 598:	f8 94       	cli

0000059a <__stop_program>:
 59a:	ff cf       	rjmp	.-2      	; 0x59a <__stop_program>
